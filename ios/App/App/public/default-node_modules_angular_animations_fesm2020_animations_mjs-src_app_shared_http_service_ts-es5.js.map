{"version":3,"sources":["webpack:///node_modules/@angular/animations/fesm2020/animations.mjs","webpack:///src/app/shared/http.service.ts"],"names":["AnimationBuilder","AnimationFactory","AUTO_STYLE","trigger","name","definitions","type","options","animate","timings","styles","group","steps","sequence","style","tokens","offset","state","keyframes","transition","stateChangeExpr","expr","animation","animateChild","useAnimation","query","selector","stagger","scheduleMicroTask","cb","Promise","resolve","then","NoopAnimationPlayer","duration","delay","_onDoneFns","_onStartFns","_onDestroyFns","_started","_destroyed","_finished","_position","parentPlayer","totalTime","forEach","fn","push","hasStarted","_onStart","triggerMicrotask","_onFinish","finish","position","phaseName","methods","length","AnimationGroupPlayer","_players","players","doneCount","destroyCount","startCount","total","player","onDone","onDestroy","_onDestroy","onStart","reduce","time","Math","max","init","play","pause","restart","destroy","reset","p","timeAtPosition","min","setPosition","longestPlayer","longestSoFar","newPlayerIsLongest","getPosition","beforeDestroy","ÉµPRE_STYLE","HttpService","http","serviceName","userdetails","JSON","parse","atob","localStorage","getItem","url","environment","header","HttpHeaders","set","token","headers","withCredentials","get","data","post","stringify","HttpClient","Injectable","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMA,iB;;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMC,iB;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMC,WAAU,GAAG,GAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAASC,QAAT,CAAiBC,IAAjB,EAAuBC,WAAvB,EAAoC;AAChC,eAAO;AAAEC,cAAI,EAAE;AAAE;AAAV;AAAyBF,cAAI,EAAJA,IAAzB;AAA+BC,qBAAW,EAAXA,WAA/B;AAA4CE,iBAAO,EAAE;AAArD,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,QAAT,CAAiBC,OAAjB,EAAyC;AAAA,YAAfC,MAAe,uEAAN,IAAM;AACrC,eAAO;AAAEJ,cAAI,EAAE;AAAE;AAAV;AAAyBI,gBAAM,EAANA,MAAzB;AAAiCD,iBAAO,EAAPA;AAAjC,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASE,MAAT,CAAeC,KAAf,EAAsC;AAAA,YAAhBL,OAAgB,uEAAN,IAAM;AAClC,eAAO;AAAED,cAAI,EAAE;AAAE;AAAV;AAAuBM,eAAK,EAALA,KAAvB;AAA8BL,iBAAO,EAAPA;AAA9B,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASM,SAAT,CAAkBD,KAAlB,EAAyC;AAAA,YAAhBL,OAAgB,uEAAN,IAAM;AACrC,eAAO;AAAED,cAAI,EAAE;AAAE;AAAV;AAA0BM,eAAK,EAALA,KAA1B;AAAiCL,iBAAO,EAAPA;AAAjC,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASO,MAAT,CAAeC,MAAf,EAAuB;AACnB,eAAO;AAAET,cAAI,EAAE;AAAE;AAAV;AAAuBI,gBAAM,EAAEK,MAA/B;AAAuCC,gBAAM,EAAE;AAA/C,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,MAAT,CAAeb,IAAf,EAAqBM,MAArB,EAA6BH,OAA7B,EAAsC;AAClC,eAAO;AAAED,cAAI,EAAE;AAAE;AAAV;AAAuBF,cAAI,EAAJA,IAAvB;AAA6BM,gBAAM,EAANA,MAA7B;AAAqCH,iBAAO,EAAPA;AAArC,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AACA,eAASW,UAAT,CAAmBN,KAAnB,EAA0B;AACtB,eAAO;AAAEN,cAAI,EAAE;AAAE;AAAV;AAA2BM,eAAK,EAALA;AAA3B,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASO,WAAT,CAAoBC,eAApB,EAAqCR,KAArC,EAA4D;AAAA,YAAhBL,OAAgB,uEAAN,IAAM;AACxD,eAAO;AAAED,cAAI,EAAE;AAAE;AAAV;AAA4Be,cAAI,EAAED,eAAlC;AAAmDE,mBAAS,EAAEV,KAA9D;AAAqEL,iBAAO,EAAPA;AAArE,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASe,UAAT,CAAmBV,KAAnB,EAA0C;AAAA,YAAhBL,OAAgB,uEAAN,IAAM;AACtC,eAAO;AAAED,cAAI,EAAE;AAAE;AAAV;AAA2BgB,mBAAS,EAAEV,KAAtC;AAA6CL,iBAAO,EAAPA;AAA7C,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASgB,aAAT,GAAsC;AAAA,YAAhBhB,OAAgB,uEAAN,IAAM;AAClC,eAAO;AAAED,cAAI,EAAE;AAAE;AAAV;AAA8BC,iBAAO,EAAPA;AAA9B,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASiB,aAAT,CAAsBF,SAAtB,EAAiD;AAAA,YAAhBf,OAAgB,uEAAN,IAAM;AAC7C,eAAO;AAAED,cAAI,EAAE;AAAG;AAAX;AAA6BgB,mBAAS,EAATA,SAA7B;AAAwCf,iBAAO,EAAPA;AAAxeAASkB,MAAT,CAAeC,QAAf,EAAyBJ,SAAzB,EAAoD;AAAA,YAAhBf,OAAgB,uEAAN,IAAM;AAChD,eAAO;AAAED,cAAI,EAAE;AAAG;AAAX;AAAwBoB,kBAAQ,EAARA,QAAxB;AAAkCJ,mBAAS,EAATA,SAAlC;AAA6Cf,iBAAO,EAAPA;AAA7C,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASoB,QAAT,CAAiBlB,OAAjB,EAA0Ba,SAA1B,EAAqC;AACjC,eAAO;AAAEhB,cAAI,EAAE;AAAG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","file":"default-node_modules_angular_animations_fesm2020_animations_mjs-src_app_shared_http_service_ts-es5.js","sourcesContent":["/**\n * @license Angular v13.2.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code> method\n * to create a programmatic animation. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass AnimationBuilder {\n}\n/**\n * A factory object returned from the\n * <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code>\n * method.\n *\n * @publicApi\n */\nclass AnimationFactory {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Specifies automatic styling.\n *\n * @publicApi\n */\nconst AUTO_STYLE = '*';\n/**\n * Creates a named animation trigger, containing a  list of [`state()`](api/animations/state)\n * and `transition()` entries to be evaluated when the expression\n * bound to the trigger changes.\n *\n * @param name An identifying string.\n * @param definitions  An animation definition object, containing an array of\n * [`state()`](api/animations/state) and `transition()` declarations.\n *\n * @return An object that encapsulates the trigger data.\n *\n * @usageNotes\n * Define an animation trigger in the `animations` section of `@Component` metadata.\n * In the template, reference the trigger by name and bind it to a trigger expression that\n * evaluates to a defined animation state, using the following format:\n *\n * `[@triggerName]=\"expression\"`\n *\n * Animation trigger bindings convert all values to strings, and then match the\n * previous and current values against any linked transitions.\n * Booleans can be specified as `1` or `true` and `0` or `false`.\n *\n * ### Usage Example\n *\n * The following example creates an animation trigger reference based on the provided\n * name value.\n * The provided animation value is expected to be an array consisting of state and\n * transition declarations.\n *\n * ```typescript\n * @Component({\n *   selector: \"my-component\",\n *   templateUrl: \"my-component-tpl.html\",\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component makes use of the defined trigger\n * by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ### Using an inline function\n * The `transition` animation method also supports reading an inline function which can decide\n * if its associated animation should be run.\n *\n * ```typescript\n * // this method is run each time the `myAnimationTrigger` trigger value changes.\n * function myInlineMatcherFn(fromState: string, toState: string, element: any, params: {[key:\n string]: any}): boolean {\n *   // notice that `element` and `params` are also available here\n *   return toState == 'yes-please-animate';\n * }\n *\n * @Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger('myAnimationTrigger', [\n *       transition(myInlineMatcherFn, [\n *         // the animation sequence code\n *       ]),\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"yes-please-animate\";\n * }\n * ```\n *\n * ### Disabling Animations\n * When true, the special animation control binding `@.disabled` binding prevents\n * all animations from rendering.\n * Place the  `@.disabled` binding on an element to disable\n * animations on the element itself, as well as any inner animation triggers\n * within the element.\n *\n * The following example shows how to use this feature:\n *\n * ```typescript\n * @Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [@.disabled]=\"isDisabled\">\n *       <div [@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * When `@.disabled` is true, it prevents the `@childAnimation` trigger from animating,\n * along with any inner animations.\n *\n * ### Disable animations application-wide\n * When an area of the template is set to have animations disabled,\n * **all** inner components have their animations disabled as well.\n * This means that you can disable all animations for an app\n * by placing a host binding set on `@.disabled` on the topmost Angular component.\n *\n * ```typescript\n * import {Component, HostBinding} from '@angular/core';\n *\n * @Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   @HostBinding('@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### Overriding disablement of inner animations\n * Despite inner animations being disabled, a parent animation can `query()`\n * for inner elements located in disabled areas of the template and still animate\n * them if needed. This is also the case for when a sub animation is\n * queried by a parent and then later animated using `animateChild()`.\n *\n * ### Detecting when an animation is disabled\n * If a region of the DOM (or the entire application) has its animations disabled, the animation\n * trigger callbacks still fire, but for zero seconds. When the callback fires, it provides\n * an instance of an `AnimationEvent`. If animations are disabled,\n * the `.disabled` flag on the event is true.\n *\n * @publicApi\n */\nfunction trigger(name, definitions) {\n    return { type: 7 /* Trigger */, name, definitions, options: {} };\n}\n/**\n * Defines an animation step that combines styling information with timing information.\n *\n * @param timings Sets `AnimateTimings` for the parent animation.\n * A string in the format \"duration [delay] [easing]\".\n *  - Duration and delay are expressed as a number and optional time unit,\n * such as \"1s\" or \"10ms\" for one second and 10 milliseconds, respectively.\n * The default unit is milliseconds.\n *  - The easing value controls how the animation accelerates and decelerates\n * during its runtime. Value is one of  `ease`, `ease-in`, `ease-out`,\n * `ease-in-out`, or a `cubic-bezier()` function call.\n * If not supplied, no easing is applied.\n *\n * For example, the string \"1s 100ms ease-out\" specifies a duration of\n * 1000 milliseconds, and delay of 100 ms, and the \"ease-out\" easing style,\n * which decelerates near the end of the duration.\n * @param styles Sets AnimationStyles for the parent animation.\n * A function call to either `style()` or `keyframes()`\n * that returns a collection of CSS style entries to be applied to the parent animation.\n * When null, uses the styles from the destination state.\n * This is useful when describing an animation step that will complete an animation;\n * see \"Animating to the final state\" in `transitions()`.\n * @returns An object that encapsulates the animation step.\n *\n * @usageNotes\n * Call within an animation `sequence()`, `{@link animations/group group()}`, or\n * `transition()` call to specify an animation step\n * that applies given style data to the parent animation for a given amount of time.\n *\n * ### Syntax Examples\n * **Timing examples**\n *\n * The following examples show various `timings` specifications.\n * - `animate(500)` : Duration is 500 milliseconds.\n * - `animate(\"1s\")` : Duration is 1000 milliseconds.\n * - `animate(\"100ms 0.5s\")` : Duration is 100 milliseconds, delay is 500 milliseconds.\n * - `animate(\"5s ease-in\")` : Duration is 5000 milliseconds, easing in.\n * - `animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\")` : Duration is 5000 milliseconds, delay is 10\n * milliseconds, easing according to a bezier curve.\n *\n * **Style examples**\n *\n * The following example calls `style()` to set a single CSS style.\n * ```typescript\n * animate(500, style({ background: \"red\" }))\n * ```\n * The following example calls `keyframes()` to set a CSS style\n * to different values for successive keyframes.\n * ```typescript\n * animate(500, keyframes(\n *  [\n *   style({ background: \"blue\" }),\n *   style({ background: \"red\" })\n *  ])\n * ```\n *\n * @publicApi\n */\nfunction animate(timings, styles = null) {\n    return { type: 4 /* Animate */, styles, timings };\n}\n/**\n * @description Defines a list of animation steps to be run in parallel.\n *\n * @param steps An array of animation step objects.\n * - When steps are defined by `style()` or `animate()`\n * function calls, each call within the group is executed instantly.\n * - To specify offset styles to be applied at a later time, define steps with\n * `keyframes()`, or use `animate()` calls with a delay value.\n * For example:\n *\n * ```typescript\n * group([\n *   animate(\"1s\", style({ background: \"black\" })),\n *   animate(\"2s\", style({ color: \"white\" }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the group data.\n *\n * @usageNotes\n * Grouped animations are useful when a series of styles must be\n * animated at different starting times and closed off at different ending times.\n *\n * When called within a `sequence()` or a\n * `transition()` call, does not continue to the next\n * instruction until all of the inner animation steps have completed.\n *\n * @publicApi\n */\nfunction group(steps, options = null) {\n    return { type: 3 /* Group */, steps, options };\n}\n/**\n * Defines a list of animation steps to be run sequentially, one by one.\n *\n * @param steps An array of animation step objects.\n * - Steps defined by `style()` calls apply the styling data immediately.\n * - Steps defined by `animate()` calls apply the styling data over time\n *   as specified by the timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(\"1s\", style({ opacity: 1 }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the sequence data.\n *\n * @usageNotes\n * When you pass an array of steps to a\n * `transition()` call, the steps run sequentially by default.\n * Compare this to the `{@link animations/group group()}` call, which runs animation steps in\n *parallel.\n *\n * When a sequence is used within a `{@link animations/group group()}` or a `transition()` call,\n * execution continues to the next instruction only after each of the inner animation\n * steps have completed.\n *\n * @publicApi\n **/\nfunction sequence(steps, options = null) {\n    return { type: 2 /* Sequence */, steps, options };\n}\n/**\n * Declares a key/value object containing CSS properties/styles that\n * can then be used for an animation [`state`](api/animations/state), within an animation\n *`sequence`, or as styling data for calls to `animate()` and `keyframes()`.\n *\n * @param tokens A set of CSS styles or HTML styles associated with an animation state.\n * The value can be any of the following:\n * - A key-value style pair associating a CSS property with a value.\n * - An array of key-value style pairs.\n * - An asterisk (*), to use auto-styling, where styles are derived from the element\n * being animated and applied to the animation when it starts.\n *\n * Auto-styling can be used to define a state that depends on layout or other\n * environmental factors.\n *\n * @return An object that encapsulates the style data.\n *\n * @usageNotes\n * The following examples create animation styles that collect a set of\n * CSS property values:\n *\n * ```typescript\n * // string values for CSS properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical pixel values\n * style({ width: 100, height: 0 })\n * ```\n *\n * The following example uses auto-styling to allow an element to animate from\n * a height of 0 up to its full height:\n *\n * ```\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * @publicApi\n **/\nfunction style(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * Declares an animation state within a trigger attached to an element.\n *\n * @param name One or more names for the defined state in a comma-separated string.\n * The following reserved state names can be supplied to define a style for specific use\n * cases:\n *\n * - `void` You can associate styles with this name to be used when\n * the element is detached from the application. For example, when an `ngIf` evaluates\n * to false, the state of the associated element is void.\n *  - `*` (asterisk) Indicates the default state. You can associate styles with this name\n * to be used as the fallback when the state that is being animated is not declared\n * within the trigger.\n *\n * @param styles A set of CSS styles associated with this state, created using the\n * `style()` function.\n * This set of styles persists on the element once the state has been reached.\n * @param options Parameters that can be passed to the state when it is invoked.\n * 0 or more key-value pairs.\n * @return An object that encapsulates the new state data.\n *\n * @usageNotes\n * Use the `trigger()` function to register states to an animation trigger.\n * Use the `transition()` function to animate between states.\n * When a state is active within a component, its associated styles persist on the element,\n * even when the animation ends.\n *\n * @publicApi\n **/\nfunction state(name, styles, options) {\n    return { type: 0 /* State */, name, styles, options };\n}\n/**\n * Defines a set of animation styles, associating each style with an optional `offset` value.\n *\n * @param steps A set of animation styles with optional offset data.\n * The optional `offset` value for a style specifies a percentage of the total animation\n * time at which that style is applied.\n * @returns An object that encapsulates the keyframes data.\n *\n * @usageNotes\n * Use with the `animate()` call. Instead of applying animations\n * from the current state\n * to the destination state, keyframes describe how each style entry is applied and at what point\n * within the animation arc.\n * Compare [CSS Keyframe Animations](https://www.w3schools.com/css/css3_animations.asp).\n *\n * ### Usage\n *\n * In the following example, the offset values describe\n * when each `backgroundColor` value is applied. The color is red at the start, and changes to\n * blue when 20% of the total time has elapsed.\n *\n * ```typescript\n * // the provided offset values\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * If there are no `offset` values specified in the style entries, the offsets\n * are calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n *```\n\n * @publicApi\n */\nfunction keyframes(steps) {\n    return { type: 5 /* Keyframes */, steps };\n}\n/**\n * Declares an animation transition which is played when a certain specified condition is met.\n *\n * @param stateChangeExpr A string with a specific format or a function that specifies when the\n * animation transition should occur (see [State Change Expression](#state-change-expression)).\n *\n * @param steps One or more animation objects that represent the animation's instructions.\n *\n * @param options An options object that can be used to specify a delay for the animation or provide\n * custom parameters for it.\n *\n * @returns An object that encapsulates the transition data.\n *\n * @usageNotes\n *\n * ### State Change Expression\n *\n * The State Change Expression instructs Angular when to run the transition's animations, it can\n *either be\n *  - a string with a specific syntax\n *  - or a function that compares the previous and current state (value of the expression bound to\n *    the element's trigger) and returns `true` if the transition should occur or `false` otherwise\n *\n * The string format can be:\n *  - `fromState => toState`, which indicates that the transition's animations should occur then the\n *    expression bound to the trigger's element goes from `fromState` to `toState`\n *\n *    _Example:_\n *      ```typescript\n *        transition('open => closed', animate('.5s ease-out', style({ height: 0 }) ))\n *      ```\n *\n *  - `fromState <=> toState`, which indicates that the transition's animations should occur then\n *    the expression bound to the trigger's element goes from `fromState` to `toState` or vice versa\n *\n *    _Example:_\n *      ```typescript\n *        transition('enabled <=> disabled', animate('1s cubic-bezier(0.8,0.3,0,1)'))\n *      ```\n *\n *  - `:enter`/`:leave`, which indicates that the transition's animations should occur when the\n *    element enters or exists the DOM\n *\n *    _Example:_\n *      ```typescript\n *        transition(':enter', [\n *          style({ opacity: 0 }),\n *          animate('500ms', style({ opacity: 1 }))\n *        ])\n *      ```\n *\n *  - `:increment`/`:decrement`, which indicates that the transition's animations should occur when\n *    the numerical expression bound to the trigger's element has increased in value or decreased\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment', query('@counter', animateChild()))\n *      ```\n *\n *  - a sequence of any of the above divided by commas, which indicates that transition's animations\n *    should occur whenever one of the state change expressions matches\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment, * => enabled, :enter', animate('1s ease', keyframes([\n *          style({ transform: 'scale(1)', offset: 0}),\n *          style({ transform: 'scale(1.1)', offset: 0.7}),\n *          style({ transform: 'scale(1)', offset: 1})\n *        ]))),\n *      ```\n *\n * Also note that in such context:\n *  - `void` can be used to indicate the absence of the element\n *  - asterisks can be used as wildcards that match any state\n *  - (as a consequence of the above, `void => *` is equivalent to `:enter` and `* => void` is\n *    equivalent to `:leave`)\n *  - `true` and `false` also match expression values of `1` and `0` respectively (but do not match\n *    _truthy_ and _falsy_ values)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Be careful about entering end leaving elements as their transitions present a common\n *  pitfall for developers.\n *\n *  Note that when an element with a trigger enters the DOM its `:enter` transition always\n *  gets executed, but its `:leave` transition will not be executed if the element is removed\n *  alongside its parent (as it will be removed \"without warning\" before its transition has\n *  a chance to be executed, the only way that such transition can occur is if the element\n *  is exiting the DOM on its own).\n *\n *\n * </div>\n *\n * ### Animating to a Final State\n *\n * If the final step in a transition is a call to `animate()` that uses a timing value\n * with no `style` data, that step is automatically considered the final animation arc,\n * for the element to reach the final state, in such case Angular automatically adds or removes\n * CSS styles to ensure that the element is in the correct final state.\n *\n *\n * ### Usage Examples\n *\n *  - Transition animations applied based on\n *    the trigger's expression value\n *\n *   ```HTML\n *   <div [@myAnimationTrigger]=\"myStatusExp\">\n *    ...\n *   </div>\n *   ```\n *\n *   ```typescript\n *   trigger(\"myAnimationTrigger\", [\n *     ..., // states\n *     transition(\"on => off, open => closed\", animate(500)),\n *     transition(\"* <=> error\", query('.indicator', animateChild()))\n *   ])\n *   ```\n *\n *  - Transition animations applied based on custom logic dependent\n *    on the trigger's expression value and provided parameters\n *\n *    ```HTML\n *    <div [@myAnimationTrigger]=\"{\n *     value: stepName,\n *     params: { target: currentTarget }\n *    }\">\n *     ...\n *    </div>\n *    ```\n *\n *    ```typescript\n *    trigger(\"myAnimationTrigger\", [\n *      ..., // states\n *      transition(\n *        (fromState, toState, _element, params) =>\n *          ['firststep', 'laststep'].includes(fromState.toLowerCase())\n *          && toState === params?.['target'],\n *        animate('1s')\n *      )\n *    ])\n *    ```\n *\n * @publicApi\n **/\nfunction transition(stateChangeExpr, steps, options = null) {\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options };\n}\n/**\n * Produces a reusable animation that can be invoked in another animation or sequence,\n * by calling the `useAnimation()` function.\n *\n * @param steps One or more animation objects, as returned by the `animate()`\n * or `sequence()` function, that form a transformation from one state to another.\n * A sequence is used by default when you pass an array.\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional developer-defined parameters.\n * Provided values for additional parameters are used as defaults,\n * and override values can be passed to the caller on invocation.\n * @returns An object that encapsulates the animation data.\n *\n * @usageNotes\n * The following example defines a reusable animation, providing some default parameter\n * values.\n *\n * ```typescript\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *   style({ opacity: '{{ end }}'}))\n *   ],\n *   { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * The following invokes the defined animation with a call to `useAnimation()`,\n * passing in override parameter values.\n *\n * ```js\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If any of the passed-in parameter values are missing from this call,\n * the default values are used. If one or more parameter values are missing before a step is\n * animated, `useAnimation()` throws an error.\n *\n * @publicApi\n */\nfunction animation(steps, options = null) {\n    return { type: 8 /* Reference */, animation: steps, options };\n}\n/**\n * Executes a queried inner animation element within an animation sequence.\n *\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional override values for developer-defined parameters.\n * @return An object that encapsulates the child animation data.\n *\n * @usageNotes\n * Each time an animation is triggered in Angular, the parent animation\n * has priority and any child animations are blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations, and run them using this function.\n *\n * Note that this feature is designed to be used with `query()` and it will only work\n * with animations that are assigned using the Angular animation library. CSS keyframes\n * and transitions are not handled by this API.\n *\n * @publicApi\n */\nfunction animateChild(options = null) {\n    return { type: 9 /* AnimateChild */, options };\n}\n/**\n * Starts a reusable animation that is created using the `animation()` function.\n *\n * @param animation The reusable animation to start.\n * @param options An options object that can contain a delay value for the start of\n * the animation, and additional override values for developer-defined parameters.\n * @return An object that contains the animation parameters.\n *\n * @publicApi\n */\nfunction useAnimation(animation, options = null) {\n    return { type: 10 /* AnimateRef */, animation, options };\n}\n/**\n * Finds one or more inner elements within the current element that is\n * being animated within a sequence. Use with `animate()`.\n *\n * @param selector The element to query, or a set of elements that contain Angular-specific\n * characteristics, specified with one or more of the following tokens.\n *  - `query(\":enter\")` or `query(\":leave\")` : Query for newly inserted/removed elements (not\n *     all elements can be queried via these tokens, see\n *     [Entering and Leaving Elements](#entering-and-leaving-elements))\n *  - `query(\":animating\")` : Query all currently animating elements.\n *  - `query(\"@triggerName\")` : Query elements that contain an animation trigger.\n *  - `query(\"@*\")` : Query all elements that contain an animation triggers.\n *  - `query(\":self\")` : Include the current element into the animation sequence.\n *\n * @param animation One or more animation steps to apply to the queried element or elements.\n * An array is treated as an animation sequence.\n * @param options An options object. Use the 'limit' field to limit the total number of\n * items to collect.\n * @return An object that encapsulates the query data.\n *\n * @usageNotes\n *\n * ### Multiple Tokens\n *\n * Tokens can be merged into a combined query selector string. For example:\n *\n * ```typescript\n *  query(':self, .record:enter, .record:leave, @subTrigger', [...])\n * ```\n *\n * The `query()` function collects multiple elements and works internally by using\n * `element.querySelectorAll`. Use the `limit` field of an options object to limit\n * the total number of items to be collected. For example:\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * By default, throws an error when zero items are found. Set the\n * `optional` flag to ignore this error. For example:\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Entering and Leaving Elements\n *\n * Not all elements can be queried via the `:enter` and `:leave` tokens, the only ones\n * that can are those that Angular assumes can enter/leave based on their own logic\n * (if their insertion/removal is simply a consequence of that of their parent they\n * should be queried via a different token in their parent's `:enter`/`:leave` transitions).\n *\n * The only elements Angular assumes can enter/leave on their own logic (thus the only\n * ones that can be queried via the `:enter` and `:leave` tokens) are:\n *  - Those inserted dynamically (via `ViewContainerRef`)\n *  - Those that have a structural directive (which, under the hood, are a subset of the above ones)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Note that elements will be successfully queried via `:enter`/`:leave` even if their\n *  insertion/removal is not done manually via `ViewContainerRef`or caused by their structural\n *  directive (e.g. they enter/exit alongside their parent).\n *\n * </div>\n *\n * ### Usage Example\n *\n * The following example queries for inner elements and animates them\n * individually using `animate()`.\n *\n * ```typescript\n * @Component({\n *   selector: 'inner',\n *   template: `\n *     <div [@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 }))),\n *        query('.content', animate(1000, style({ opacity: 1 }))),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nfunction query(selector, animation, options = null) {\n    return { type: 11 /* Query */, selector, animation, options };\n}\n/**\n * Use within an animation `query()` call to issue a timing gap after\n * each queried item is animated.\n *\n * @param timings A delay value.\n * @param animation One ore more animation steps.\n * @returns An object that encapsulates the stagger data.\n *\n * @usageNotes\n * In the following example, a container element wraps a list of items stamped out\n * by an `ngFor`. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * Each time items are added, the opacity fade-in animation runs,\n * and each removed item is faded out.\n * When either of these animations occur, the stagger effect is\n * applied after each item's animation is started.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * Here is the component code:\n *\n * ```typescript\n * import {trigger, transition, style, animate, query, stagger} from '@angular/animations';\n * @Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *     ...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *    }\n *  }\n * ```\n *\n * Here is the animation trigger code:\n *\n * ```typescript\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * @publicApi\n */\nfunction stagger(timings, animation) {\n    return { type: 12 /* Stagger */, timings, animation };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction scheduleMicroTask(cb) {\n    Promise.resolve(null).then(cb);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An empty programmatic controller for reusable animations.\n * Used internally when animations are disabled, to avoid\n * checking for the null case when an animation player is expected.\n *\n * @see `animate()`\n * @see `AnimationPlayer`\n * @see `GroupPlayer`\n *\n * @publicApi\n */\nclass NoopAnimationPlayer {\n    constructor(duration = 0, delay = 0) {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._started = false;\n        this._destroyed = false;\n        this._finished = false;\n        this._position = 0;\n        this.parentPlayer = null;\n        this.totalTime = duration + delay;\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(fn => fn());\n            this._onDoneFns = [];\n        }\n    }\n    onStart(fn) {\n        this._onStartFns.push(fn);\n    }\n    onDone(fn) {\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    hasStarted() {\n        return this._started;\n    }\n    init() { }\n    play() {\n        if (!this.hasStarted()) {\n            this._onStart();\n            this.triggerMicrotask();\n        }\n        this._started = true;\n    }\n    /** @internal */\n    triggerMicrotask() {\n        scheduleMicroTask(() => this._onFinish());\n    }\n    _onStart() {\n        this._onStartFns.forEach(fn => fn());\n        this._onStartFns = [];\n    }\n    pause() { }\n    restart() { }\n    finish() {\n        this._onFinish();\n    }\n    destroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            if (!this.hasStarted()) {\n                this._onStart();\n            }\n            this.finish();\n            this._onDestroyFns.forEach(fn => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    reset() {\n        this._started = false;\n    }\n    setPosition(position) {\n        this._position = this.totalTime ? position * this.totalTime : 1;\n    }\n    getPosition() {\n        return this.totalTime ? this._position / this.totalTime : 1;\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(fn => fn());\n        methods.length = 0;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A programmatic controller for a group of reusable animations.\n * Used internally to control animations.\n *\n * @see `AnimationPlayer`\n * @see `{@link animations/group group()}`\n *\n */\nclass AnimationGroupPlayer {\n    constructor(_players) {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this._onDestroyFns = [];\n        this.parentPlayer = null;\n        this.totalTime = 0;\n        this.players = _players;\n        let doneCount = 0;\n        let destroyCount = 0;\n        let startCount = 0;\n        const total = this.players.length;\n        if (total == 0) {\n            scheduleMicroTask(() => this._onFinish());\n        }\n        else {\n            this.players.forEach(player => {\n                player.onDone(() => {\n                    if (++doneCount == total) {\n                        this._onFinish();\n                    }\n                });\n                player.onDestroy(() => {\n                    if (++destroyCount == total) {\n                        this._onDestroy();\n                    }\n                });\n                player.onStart(() => {\n                    if (++startCount == total) {\n                        this._onStart();\n                    }\n                });\n            });\n        }\n        this.totalTime = this.players.reduce((time, player) => Math.max(time, player.totalTime), 0);\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(fn => fn());\n            this._onDoneFns = [];\n        }\n    }\n    init() {\n        this.players.forEach(player => player.init());\n    }\n    onStart(fn) {\n        this._onStartFns.push(fn);\n    }\n    _onStart() {\n        if (!this.hasStarted()) {\n            this._started = true;\n            this._onStartFns.forEach(fn => fn());\n            this._onStartFns = [];\n        }\n    }\n    onDone(fn) {\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    hasStarted() {\n        return this._started;\n    }\n    play() {\n        if (!this.parentPlayer) {\n            this.init();\n        }\n        this._onStart();\n        this.players.forEach(player => player.play());\n    }\n    pause() {\n        this.players.forEach(player => player.pause());\n    }\n    restart() {\n        this.players.forEach(player => player.restart());\n    }\n    finish() {\n        this._onFinish();\n        this.players.forEach(player => player.finish());\n    }\n    destroy() {\n        this._onDestroy();\n    }\n    _onDestroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._onFinish();\n            this.players.forEach(player => player.destroy());\n            this._onDestroyFns.forEach(fn => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    reset() {\n        this.players.forEach(player => player.reset());\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    }\n    setPosition(p) {\n        const timeAtPosition = p * this.totalTime;\n        this.players.forEach(player => {\n            const position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n            player.setPosition(position);\n        });\n    }\n    getPosition() {\n        const longestPlayer = this.players.reduce((longestSoFar, player) => {\n            const newPlayerIsLongest = longestSoFar === null || player.totalTime > longestSoFar.totalTime;\n            return newPlayerIsLongest ? player : longestSoFar;\n        }, null);\n        return longestPlayer != null ? longestPlayer.getPosition() : 0;\n    }\n    beforeDestroy() {\n        this.players.forEach(player => {\n            if (player.beforeDestroy) {\n                player.beforeDestroy();\n            }\n        });\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(fn => fn());\n        methods.length = 0;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ÉµPRE_STYLE = '!';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTO_STYLE, AnimationBuilder, AnimationFactory, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ÉµAnimationGroupPlayer, ÉµPRE_STYLE };\n//# sourceMappingURL=animations.mjs.map\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) { }\n  get(serviceName: string) {\n    const userdetails: any = JSON.parse(atob(localStorage.getItem(\"24hrs-user-data\")));\n    const url = environment.baseUrl + serviceName;\n    const header = new HttpHeaders()\n      // .set(\"Access-Control-Allow-Origin\", \"*\")\n      // .set(\"Access-Control-Allow-Methods\", \"GET,POST\")\n      // .set('Accept','application/json')\n      // .set('Content-Type','application/json')\n      // .set(\"Access-Control-Allow-Headers\", \"Token, Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\")\n      .set(\"Token\", userdetails.token);\n    //   let httpOptions = {\n    //     headers: new HttpHeaders({\n    //       \"Access-Control-Allow-Origin\": \"*\",\n    //       \"Access-Control-Allow-Methods\": \"*\",\n    //       \"Access-Control-Allow-Headers\":\"Token, Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\",\n    //       'Authorization':userdetails.token,\n    //       \"Content-Type\": \"application/json\"\n\n    //     })\n    // };\n\n    const options = { headers: header, withCredentials: true };\n    return this.http.get(url, { headers: header });\n  }\n\n  post(serviceName: any, data: any): any {\n    const token: any = ((localStorage.getItem(\"token\")));\n\n\n    const url = environment.baseUrl + serviceName;\n    if (serviceName == '/user_get_otp' || serviceName == '/user_verify_otp' || serviceName == '/user_register' || serviceName == '/user_login') {\n      const headers = new HttpHeaders()\n      const options = { headers: headers, withCredentials: false };\n      return this.http.post(url, JSON.stringify(data), { headers: headers });\n    } else {\n      const headers = new HttpHeaders().set(\"Token\", token);\n      const options = { headers: headers, withCredentials: true };\n      return this.http.post(url, JSON.stringify(data), { headers: headers });\n    }\n\n\n\n  }\n\n  postFormData(serviceName: any, data: any): any {\n    const token: any = ((localStorage.getItem(\"token\")));\n    const url = environment.baseUrl + serviceName;\n\n    const headers = {\n      'enctype': 'multipart/form-data;',\n      'Content-Type': 'multipart/form-data;',\n      'Accept': 'plain/text',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT',\n      'Access-Control-Allow-Headers': 'Authorization, Origin, Content-Type, X-CSRF-Token',\n      'Token': token\n    }\n\n    // const headers = new HttpHeaders().set(\"Token\", token );\n    //  headers.set('Content-Type', 'multipart/form-data'); \n    const options = { headers: headers, withCredentials: true };\n    return this.http.post(url, data, { headers: headers });\n\n  }\n\n\n}\n"]}